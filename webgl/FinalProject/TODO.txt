textures with correct alignment for subsegments
extra shader to ignore lighting on flats (Floor and Ceiling)
draw 2D minimap?
static 2D things?

When looking at the front of a polygon, points of the triangle are in ccw order
the front face of a cube is 0(-1,-1) , 1(1,-1) , 2(1,1) , 3(-1,1) [all z are 1, normal is (0,0,1)]
its triangles are (0,1,2) , (2,3,0)
if my segment for the face is a(-1,1) , b(1,1), can define point 2 over b and point 3 over a 
[segment points are (x,z), y comes from map floor and ceiling height]
so to get normal on the right, it's n = (b-a) x up
lets define the front of a segment with the point order:
 if the vector making the wall is from a to b (b-a), the front of the wall is on the right
to recreate the basic cube with segments (such as a column in the room), use these four:
A((-1,-1),(1,-1)) B((1,-1),(1,1)) C((1,1),(-1,1)) D((-1,1),(-1,-1))
to make the walls around the cubical room, reverse the points in each segment

A segment has a pair of points in the y plane, and a color
A map has a list of segments, floor and ceiling height and color, bounds, and start position

BSP Tree
Put list of nodes in an array
Keep index of root node
Each node has a segment, and two indices pointing to its children, or a special value like -1 for null

Tree builder
A node has a list of segments, etc.
Have an array of segments, adding new subsegments to the end, and store indices in the node?
Keep the first segment in the list, then for the rest of list, order into left in right child depending on direction
A segment is split if some is in front and in back of this segment
Put one subsegment in original index, and the other subsegment at the end

Actually, instead of each node storing a list, just give it a list as the argument for the recursive function
Give the whole segment list to the root node, it keeps the first segment and builds two arrays with the other segments
It recursively builds the left and right child node using these arrays as arguments