Matthew Gillatt
CS464 Intro to Computer Graphics
Final Project
12/18/2015

Files Included:
/reports
 /BSP Slides: presentation images demonstrating manual construction of a BSP tree
 MatthewGillattProjectFinal.odt
 MatthewGillattProjectFinal.pdf: The final report for the finished project
 MatthewGillattProjectProposal.odt
 MatthewGillattProjectProposal.pdf
 MatthewGillattProjectStatus.odt
 MatthewGillattProjectStatus.pdf
 screenshot1.png: 2D text canvas and FPS counter
 screenshot2.png: Selective drawing order: only drew front face, then left
 screenshot3.png: Keyboard handling, using WASD and Cursor keys
 screenshot4.png: Complete movement controls, and depth testing disabled
 screenshot5.png: Vertex Color attribute. Now white light on colored polygons, instead of red light on white cube
 screenshot6.png: Vertex Color non-uniform on one face
 screenshot7.png: Segment objects, and Floor and Ceiling all from map file
 screenshot8.png: Extra yellow segment added with one line of code
 screenshot9.png: Textured walls, not a fully supported feature
 screenshot10.png: Presentation version of main code.  Traverses manually built BSP tree.  Dot product with white segment displayed.
 screenshot11.png: Early implementation of BSP tree builder.  Spanning segments were treated as in front, leading to predicted glitches.
 screenshot12.png: Final code running on level1.js.  Some cubes with collinear segments.
 screenshot13.png: Intersecting segments.  Naturally split into subsegments for drawing.
 screenshot14.png: Overlapping squares.
 screenshot15.png: Segments generated by for loop.
 screenshot16.png: Randomly generated segments.
box.png: texture for most examples
bsp_tree.js: final version of BSP tree builder, and Node object
bsp_treeMANUAL.js: presentation version of BSP tree, manually constructed for testcube.js
glMatrix_util.js: provided scripts
level1.js: more complex map, demonstrating proper functionality of the BSP tree builder
main_cube.html: final version of main, running on the map from testcube.js
main_level1.html: final version of main, running on the map from level1.js
main_level1CULL.html: final version of main with backface culling enabled
map_template.js: a starting point for creation of new map files
presentation.html: presentation version of main, using bsp_treeMANUAL.js
presentationAUTO.html: presentatation version of main using WebGL's automatic depth sorting instead of tree traversal
presentationBAD.html: presentation version of main without depth testing or tree traversal
presentationCULL.html: presentation version of main using backface culling with tree traversal 
README.txt: this documentation
segment.js: Segment object class
testcube.js: the first map file made for this project
TODO: brainstorming pad, with future features to implement and planning for object structures
webgl-utils.js: provided scripts

Instructions:
There are no mouse controls.  Use WASD for moving with strafing, and the cursor keys for moving with turning.  The presentation html files were used during my presentation Thursday, 12/10.  They used a manually built BSP tree to demonstrate the drawing of polygons using BSP tree traversal.  The main html files use the final version of the BSP tree builder.  The best html file to judge would be main_level1.html.

Please refer to reports/MatthewGillattProjectFinal.pdf for the final rundown of the project.

All of my HTML files were tested on my Windows laptop in Firefox.  I haven't tested things like Chrome.

Extra Credit:
No extra credit was attempted.